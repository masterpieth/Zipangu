<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.syuusyoku.zipangu.dao.MemberMapper">
	<select id="checkID" resultType="int">
		SELECT
			COUNT(*)
		FROM
			member
		WHERE
			LOWER(userid) = LOWER(#{userID})
	</select>

	<insert id="signup" parameterType="member">
		INSERT INTO
			member
		VALUES (
			#{userID},
			#{userPwd},
			#{email},
			#{userName},
			#{birth},
			#{address},
			#{phone},
			#{sex},
			#{authority},
			#{textFileName},
			DEFAULT
		)
	</insert>

	<select id="login" parameterType="member" resultType="int">
		SELECT
			COUNT(*)
		FROM
			member
		WHERE
			LOWER(userid) = LOWER(#{userID})
		AND
			userpwd = #{userPwd}
	</select>
	
	<update id="uploadKakaoText" parameterType="member">
		update member set textFileName=#{textFileName} where userID=#{userID}
	</update>
	
	<select id="mentorList" resultType="member">
		select * from member where authority = '1'
	</select>
	
	<select id="getMember" parameterType="String" resultType="member">
		SELECT
			userid,
			userpwd,
			email,
			username,
			TO_CHAR(birth,'YYYY-MM-DD') AS birth,
			address,
			phone,
			sex,
			authority,
			textfilename,
			TO_CHAR(signupdate,'YYYY-MM-DD') AS signupDate
		FROM
			member
		WHERE
			LOWER(userid) = LOWER(#{userID})
	</select>

	<update id="update" parameterType="member">
		UPDATE
			member
		SET
			username = #{userName},
			userpwd = #{userPwd},
			email = #{email},
			address = #{address},
			phone = #{phone},
			sex = #{sex},
			authority = #{authority}
		WHERE
			userid = #{userID}
	</update>

	<update id="menteeWithdraw" parameterType="member">
		UPDATE
			schedule
		SET
			menteeid = NULL
		WHERE
			menteeid = #{userID}
	</update>

	<delete id="withdraw" parameterType="member">
	{CALL BEGIN
		DELETE company_result WHERE	userid = #{userID};
		DELETE timeline WHERE userid = #{userID};
		DELETE personality WHERE userid = #{userID};
		<choose>
			<when test="authority eq 1">
				DELETE list_msg WHERE mentor_id = #{userID};
				DELETE schedule WHERE mentorid = #{userID};
			</when>
			<otherwise>
				DELETE list_msg WHERE mentee_id = #{userID};
			</otherwise>
		</choose>
		DELETE interview_result	WHERE interview_num IN (SELECT interview_num FROM interview WHERE userid = #{userID});
		DELETE interview WHERE userid = #{userID};
		DELETE career WHERE resume_num IN (SELECT resume_num FROM resume WHERE userid = #{userID});
		DELETE qualified WHERE resume_num IN (SELECT resume_num FROM resume WHERE userid = #{userID});
		DELETE resume_member WHERE resume_num IN (SELECT resume_num FROM resume WHERE userid = #{userID});
		DELETE resume WHERE userid = #{userID};
		DELETE member WHERE	userid = #{userID};
	END}
	</delete>
</mapper>